FROM nvidia/cuda:12.2.0-devel-ubuntu22.04 AS gpu-base

# Install system dependencies for GPU support
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    pkg-config \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    libssl-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

FROM ubuntu:22.04 AS cpu-base

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    pkg-config \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    libssl-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Choose base image based on GPU support
ARG WITH_GPU=false
FROM ${WITH_GPU:+gpu-base}${WITH_GPU:-cpu-base} AS builder

# Create app directory
WORKDIR /app

# Copy setup files
COPY setup.py .
COPY CMakeLists.txt .
COPY blockchain_cpp.cpp .
COPY gpu_mining.cu .
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Build C++ extension
RUN pip3 install --no-cache-dir -e .

# Copy application code
COPY . .

# Final image
FROM ${WITH_GPU:+gpu-base}${WITH_GPU:-cpu-base}

WORKDIR /app

# Copy built packages from builder
COPY --from=builder /app /app
COPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.10/site-packages/

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Create data directory
RUN mkdir -p /app/data /app/config /app/logs

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    DATA_DIR=/app/data \
    CONFIG_DIR=/app/config \
    LOG_DIR=/app/logs

# Set up entrypoint
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Expose ports for API and P2P
EXPOSE 8000 8001

# Set entrypoint and default command
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["python3", "-m", "enhanced_blockchain.main"]