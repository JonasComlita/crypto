version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: blockchain-postgres
    environment:
      POSTGRES_USER: blockchain
      POSTGRES_PASSWORD: blockchain
      POSTGRES_DB: blockchain
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "blockchain"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - blockchain-network

  # Blockchain node
  blockchain-node:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - WITH_GPU=${WITH_GPU:-false}
    container_name: blockchain-node
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=blockchain
      - POSTGRES_PASSWORD=blockchain
      - POSTGRES_DB=blockchain
      - NODE_ID=${NODE_ID:-node1}
      - P2P_PORT=${P2P_PORT:-8001}
      - API_PORT=${API_PORT:-8000}
      - INITIAL_DIFFICULTY=${INITIAL_DIFFICULTY:-4}
      - INITIAL_REWARD=${INITIAL_REWARD:-50}
      - USE_GPU=${USE_GPU:-false}
      - NUM_MINING_WORKERS=${NUM_MINING_WORKERS:-2}
    ports:
      - "${API_PORT:-8000}:8000"
      - "${P2P_PORT:-8001}:8001"
    volumes:
      - blockchain_data:/app/data
      - ./config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - blockchain-network
    # Use GPU if available
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
              # This section is only used if WITH_GPU=true

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: blockchain-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - blockchain-network

  # Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: blockchain-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - blockchain-network

volumes:
  postgres_data:
  blockchain_data:
  prometheus_data:
  grafana_data:

networks:
  blockchain-network:
    driver: bridge
